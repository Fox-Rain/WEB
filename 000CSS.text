< CSS 불러오기 > link
<link href="css파일명" type="text/css" rel="stylesheet">     <-- 이런식으로 불러올 수 있다.




< 서체 > style=""

글자색 지정     -> color: 원하는색 (hex코드,rgb(),색상 등이 올 수 있다.)   Ex) color: red;


글씨 서체 지정  -> font-family: 원하는서체 (서체명이 한글이거나 띄어쓰기가 포함되어있을 경우엔 ""로 감싸주어야하고 영문일 경우 감싸지않아도됨)
 
                  *** 서체를 지정할때에는 사용자가 원하는 서체가없을 경우 대체할 서체를 뒤에 선택해주는것이 중요하다.
                  Ex) font-fanily:"맑은고딕",dotum,"굴림",gulim,sans-serif; <- 1순위 맑은고딕, 2순위 dotum 3순위 굴림....
                  마지막에 sans-serif는 그 사용자의 글씨체에 따라 맞춰서 설정하라는 의미이다.


글씨 크기       -> font-size: 원하는 폰트 사이즈    (px, em, %)


글씨 굵기       -> font-weight: 원하는 굵기         Ex) normal, lighter, bold, bolder, 또는 숫자로 수치를 입력할 수도 있습니다.


줄 간격         -> line-height: 원하는줄간격        (px, em, %)


*** font로 시작하는 style의 속성값들을 한번에 나타낼 수 있다
*** font: font-style font-variant font-weight font-size font-family 이 순으로 한번에 적을 수 있다.
*** 단, "font-size와 font-family"는 필수적으로 적어주어야한다. ***




< 문자 스타일 > style=""

문자에 줄긋기    -> text-decoration: 종류 (none(효과x) underline(밑줄) overline(윗줄) line-through(관통하는줄))


문자 정렬하기    -> text-align: 종류 (left(좌측정렬) right(우측정렬) center(중앙정렬))


문자 들/내어쓰기 -> text-indent: (px, em)  <숫자가 양수일때 들여쓰기, 음수일때 내어쓰기>


글자간 간격      -> letter-spacing: (px, em) <숫자가 양수일때 간격이 넓어지고, 음수일때 간격이 좁아진다>


단어간 간격      -> word-spacing: (px, em) '단어간'의 간격을 조절하는 속성


요소간 수직정렬  -> vertical-aligngn:   <- 예를 들면 제곱을 나타내거나 이럴때 사용됨.




< 배경 스타일 > style=""

배경 색상        -> background-color: 원하는색 (hex, rgb, 색상)


배경 이미지      -> background-image: url('상대/절대주소')


배경 이미지 반복 -> background-repeat: (repeat(전체를 반복하여 채움) repeat-x repeat-y (가로/세로만 채움) no-repeat(채우지않고 1번만))


배경 이미지 위치 -> background-position:


배경 이미지 이동 -> background-attachment: (scroll(고정) local(내용에 고정 즉, 스크롤시 같이 이동함) fixed)


*** background도 마찬가지로 한번에 여러 속성값을 지정할 수 있습니다.
*** 순서는 상관이 없습니다.




< 테두리 스타일 > style=""
테두리를 구성하는 선들을 조절하기   형식은 border-방향-요소 입니다.

선 굵기          -> border-방향-width: (px em..)  px을 자주 씁니다.    Ex) border-top-width: 3px;


선 형태          -> border-방향-style: (none solid dotted dashed double groove ridge inset outset ..)


선 색상          -> border-방향-color: (hex rgb 색상)


*** border도 마찬가지로 속성값을 여러개 선언 할 수 있습니다.
*** Ex) border-top: ......     border-width: ........    border: ......




< 박스모델 스타일 > style=""

마진(요쇼간 간격)-> margin-방향: (px, em, %)  Ex) margin-top: 3px   또한, margin으로 몰아서 적을수도 있다. Ex) margin: 3px 2px 0 1px


패딩(요소안 간격)-> padding-방향:(px, em, %) padding도 margin과 마찬가지로 몰아쓸 수 있다.


넓이(높이)       -> width : (px, em, %)     height: (px, em, %)




< 리스트 스타일 > style=""
ol, ul, li 태그에 스타일을 줄 수 있는 CSS

리스트앞에 표시  -> list-style-type: (none disc circle square decimal lower-alpha upper-alpha lower-roman upper-roman)  Ex) 1. text


표시를 이미지로  -> list-style-image: url('상대/절대주소')    (받아온 이미지를 표시로 사용)


리스트 표시 위치 -> list-style-position: (outside(표시를 바깥에 위치) inside(표시를 안에))


*** 역시 마찬가지로 list-style:을 통해서 여러 속성값을 한번에 선언이 가능하다. 
*** 또한 image가 로딩 안될시 type로 표시가 되므로 type도 혹시나 모를 상황을 대비하여 설정하는것이 좋다.




< 크로스 브라우징 > style:""
모든 부라우저에서 깨지지 않도록 다듬는 과정
브라우저 엔진 (스마트폰으로 따지면 OS) 거의 비슷하지만 약간씩 다르므로 그에 따른 버그가 발생할 수 있다.
따라서 브라우저들을 엔진별로 확인하고 그에 따라 대응하는것이 필요합니다.

(엔진 종류)
트라이던트
게코
웹킷
프레스토
블링크
듀얼엔진

브라우저에 따라서 css을 넣지않은 html에서도 기본적으로 탑재되는 브라우저 CSS가 약간씩 달라서 크기나 간격이 약간씩 다를 수 있습니다.
이러한 차이가 나는 부분들을 미리 스타일을 주는 방법이 있는데 그것을 "CSS 초기화"라고 합니다.
즉, 처음 CSS의 마진 패딩등을 0으로 설정하는 것입니다.

Ex)
*{                                                  ( * 선택자는 모든 요소를 선택하는 선택자입니다.) <약간의 속도저하가 있을 수 있습니다. 속도저하가 문제될땐 일일이 요소에 스타일을 주기도합니다.
    margin : 0;
    padding : 0;
}

CSS초기화는 정답이 없습니다. 개발자의 스타일에 따라서 정하시면됩니다. (검색을 통해 자세히 알아보면 좋습니다.)
** 스타일 초기화는 적으면 적을 수록 좋습니다.




< 자식 선택자 > '>'

<div class="country">
    <span>Korea</span>
    <ul class="city">
        <span>Seoul</span>
    </ul>
</div>

위에 예시에서 div아래의 span만 선택하고 싶을 경우 .country > span{ }을 이용하면 된다.
왜냐하면 만약 그냥 .country span{ }을 사용하게되면 아래의 class="city"의 span까지 포괄되기 때문이다.
즉, 바로아래의 자식만 선택하고 싶을때에 자식 선택자 '>'을 이용하면 편리하다.




< 인접 형제 선택자 > '+'

<div class="abc">
    <p>Apple</p>
    <p>Orange</p>
    <p>Banana</p>
</div>

위에 예시에서 p+p {}을 이용하게 되면 p요소다음에 오는 p의 요소를 선택하는 것이므로 처음에 나오는 Apple은 빼고
Orange Banana가 선택되게 된다.
*** 단 인접형제선택자는 서로 인접해야만 요소가 선택된다.




< 일반 형제 선택자 > '~'

<div class="abc">
    <p>Apple</p>
    <p>Orange</p>
    <div>kakao</div>
    <p>Banana</p>
</div>

위에서 p~p{ }을 이용하게 되면 Orange와 div때문에 <p>Banana</p>가 떨어져 있음에도 불구하고 Banana 도 함께 선택 할 수 있다.
*** ~ 일반형제선택자는 떨어져있는 요소도 선택이 된다.




< 가상 클래스 선택자 >

링크상태 선택자     -> a:link{}   링크를가진 상태의 요소만 선택됨


방문한 링크 선택자  -> a:visted{} 방문한 링크인 요소만 선택됨 (Ex)방문한 링크는 색바꾸는 이펙트등에 사용됨.



오버상태 선택자     -> a:hover{}  마우스를 가져다 댔을때의 요소만 선택됨.


클릭상태 선택자     -> a:active{} 클릭상태의 요소만 선택됨.

*** 가상클래스선택자 또한 늦게 선언된것이 앞에 선언된것과 같이 적용될때 늦게선언된것이 덮어쓰기 되므로 주의해야합니다.




< 다중 CSS스타일 시트 & 우선순위 >

CSS스타일시트는 페이지마다 다르게 작성하는것이 일반적이므로 따로 나누어 시트를 작성해야 페이지의 로딩시간을 줄일 수 있다.
또한 다 나눈다고 좋은것은 아닙니다. 적당히 맞추어 성능에 맞게 나누는것이 중요합니다.
(즉, 페이지마다 따로 스타일 시트를 만들어 저장하는것이 좋다.)

link               ->  <link href="css파일명" type="text/css" rel="stylesheet">




< display와 visibility > style=""

display: (block(블럭요소로 바꿉니다) inline(인라인요소로 바꿉니다) inline-block(인라인-블럭으로 바꿉니다<인라인+블럭요소>) none(요소를 아예 보여주지 않습니다))

*** inline-block (인라인 블럭) 줄바꿈x, 높이 넓이를 가질 수 있음
*** none 요소를 완전히 숨기는 것


visibility: (visible(요소를 보여줌) hidden(요소를 숨깁니다 단, display:none과 다르게 해당영역의 요소는 살아있습니다))




< overflow, float, clear >

overflow       -> 박스모델 안에서 콘텐츠(텍스트,이미지등..)이 박스를 벗어 낼때 어떻게 처리할 것인지를 나타내는 속성입니다.
                  
                  overflow: (visible(벗어나는 콘텐츠들도 그대로 나타납니다) scroll(스크롤바를 우축에 위치해놓고 스크롤하여 볼 수 있도록 함)
                  hidden(벗어나는 콘텐츠들을 모두 숨긴다) auto(콘텐츠가 박스를 벗어날 경우에만 스크롤바가 나타남) )
           
                  scroll vs auto
                  scroll은 항상 스크롤바가 나타나고, auto는 컨텐츠가 벗어날 경우에만 나타난다. 즉, auto는 내용이 짧을 경우엔 스크롤바가 
                  나타나지 않는다.


float          -> 글을 작성할떄 글옆에 이미지를 나타내고 싶을 경우 자주쓰이는 속성이다.
                  
                  float: (none(요소를 띄우지 않음) left(요소를 왼쪽) right(요소를 오른쪽))


clear          -> float이후 섹션 시작위치를 재설정하고 싶을때

                  clear: (none(해제x) left(float:left해제) right(float:right해제) both(float:right left 모두 해제))




< float 레이아웃 >





